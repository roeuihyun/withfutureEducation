server:
  port: 8080
  servlet:
    context-path: /
    encoding:      charset: UTF-8
      enabled: true
      force: true

spring:
#  mvc:
#  pathmatch:
#    matching-strategy: ant_path_matcher # "path-pattern-parser"
  mvc:
    pathmatch:
      matching-strategy: "ant_path_matcher"
  main:
    allow-circular-references: true
#  jpa:
#    database: H2
#    hibernate:
      # create - 생성한것 계속 쓰기
#      ddl-auto: create
  # url접속시 jdbc:h2:mem:testdb 이걸 꼭 적어줘야 웹페이지로 DB정보를 볼 수 있다.
  # http://localhost:8080/h2console
  # url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  # DB 연결
  datasource:
    # 설치된 H2 DB와 연결 URL
    #url: jdbc:h2:tcp://localhost/~/test
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    # 접속을 위한 드라이버
    driver-class-name: org.h2.Driver
    # springboot 2.4 부터는 username이 꼭 있어야합니다. 없으면 에러가 발생합니다.
    username: sa
    password: 1234
  jpa:
    # JPA가 수행하는 SQL을 볼 수 있다.
    show-sql: true
    # 객체를 보고 자동으로 테이블 생성 여부. 생성 - create, 비생성 - none
    # 테스트이기 때문에 create로 설정하며
    # 실제로는 none 으로 합니다. create이면 기존의 테이블을 전부 밀어버립니다.
    hibernate:
      ddl-auto: create
  # 콘솔 확인 을 위한 always
  output:
    ansi:
      enabled: always
  h2:
    console:
      enabled: true
      path: /h2console
      
# 파라미터 확인을 위한 trace
logging:
  level:
    org.hibernate.type: trace
      
pagehelper:
  helper-dialect: h2
  reasonable: true # 범위를 넘어가는 pageNum이 들어올 때 가능할 값으로 변경